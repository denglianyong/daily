修改cc参数
auto/cc/conf  :cflag 加-g
auto/cc/gcc -O0  防止编译器优化代码，debug乱跳

daemon off; 前台启动，注意最后的分号
新建logs目录，防止启动失败

./configure --prefix=/home/orion/workspace/nginx


eclipse导入失败，找不到目标all：
解决办法：将根目录下的Makefile 的build目标修改为all

eclipse  启动参数
-c  nginx配置文件路径 /home/orion/workspace/nginx/conf/nginx.conf

root 启动  需要配置user=root
普通用户启动 需要修改端口8080
 
 gdb调试
 home目录下  新建.gdbinit
 set follow-fork-mode child 
 追踪子进程

openssl，pcre,zlib  等库，直接yum 
wget到/usr/local/src

C_INCLUDE_PATH 添加如下路径，防止eclipse找不到头文件
/home/orion/workspace/nginx/src/core:/home/orion/workspace/nginx/src/event:/home/orion/workspace/nginx/src/http:/home/orion/workspace/nginx/src/mail:/home/orion/workspace/nginx/src/os/unix

/usr/include:/usr/include/sys:/usr/local/include:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include:




nginx高性能原因总结：
1.CPU:设置CPU亲和度，worker绑定一个CPU，降低切换代价
2.内存管理：设计内存池，大小内存分别管理，统一申请释放，减少内存碎片
3.异步AIO，mutux防止accept惊群，buf chain实现零拷贝，mmap文件映射，sendfile
4.事件驱动框架：调用epoll实现reactor，异步回调方式
5.多进程多线程架构设计：进程间资源独立，减少锁的等待



强制杀进程
 ps  aux|grep nginx|grep -v grep |awk '{ print  $2 } '|xargs kill -9 
 优雅杀进程  在objs目录下 
 ./nginx -s stop 


can not dective int  size：重启虚拟机OS解决

编译能通过，但 变量有红叉，无法解析
Project -> C/C++ index ->  Freshen all files

附录：
安装增强工具
报错，先eject 光盘，安装增强功能

centos root 密码   deng=6759929
ubuntu  orion 密码  deng=123456

eclipse 添加-lpthread
Project->Properties->C/C++ Build->Settings->GCC C++ Linker->Libraries


eclipse for C/C++ 官网下载
https://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/oxygen/3a/eclipse-cpp-oxygen-3a-linux-gtk-x86_64.tar.gz&mirror_id=1290

aliyun下载 ubuntu
http://mirrors.aliyun.com/ubuntu-releases/

